var M=Object.defineProperty;var P=(r,t,e)=>t in r?M(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var n=(r,t,e)=>(P(r,typeof t!="symbol"?t+"":t,e),e);import{d as L,r as O,o as C,h as b,c as d,a as x,t as N,u as y,F as m,b as w,n as k,e as p,f as F}from"./vendor.97a7e87d.js";const T=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function e(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerpolicy&&(i.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?i.credentials="include":o.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=e(o);fetch(o.href,i)}};T();class R{constructor(t,e){this.width=t,this.height=e}isCollision(t){const e=t.x<0||t.y<0||t.x>=this.width||t.y>=this.height;return e&&console.error("\u649E\u5899\u4E86"),e}}class u{constructor(){n(this,"x",0);n(this,"y",0)}static create(t,e){const s=new u;return s.x=t,s.y=e,s}}function G(r,t,e){let s=0,o=0;i();function i(){s=Math.floor(Math.random()*r),o=Math.floor(Math.random()*t);for(let c=0;c<e.length;c++)if(s===e[c].x&&o===e[c].y){i();break}}return u.create(s,o)}class I extends u{constructor(t){super();this.game=t}getRandomPoint(){const{game:t}=this,e=t.forbiddenPoints;return G(t.map.width,t.map.height,e)}}class _ extends I{constructor(){super(...arguments);n(this,"type","food")}produce(){const t=this.getRandomPoint();this.x=t.x,this.y=t.y}consume(){return this.game.snake.grow(this.x,this.y),this.game.count++,!0}}class ${constructor(){n(this,"obstacles",[])}add(t){this.obstacles.push(t)}isCollision(t){return this.obstacles.filter(e=>e.x===t.x&&e.y===t.y)}init(){this.obstacles.forEach(t=>t.produce())}}class g extends u{static create(t,e){const s=new g;return s.x=t,s.y=e,s}}class A{constructor(){n(this,"body")}get head(){return this.body[0]}get size(){return this.body.length}init(t){this.body=[];for(let e=0;e<t;e++)this.prepend(g.create(e,0))}getNextPosition(t){const{head:e}=this,s=new u;return s.x=e.x+t.x,s.y=e.y+t.y,s}grow(t,e){this.append(g.create(t,e))}reduce(){this.body.pop()}append(t){this.body.push(t)}prepend(t){this.body.unshift(t)}isCollision(t){for(let e=0;e<this.body.length;e++){const s=this.body[e];if(s.x===t.x&&s.y===t.y)return console.error("\u649E\u81EA\u5DF1\u4E86"),!0}return!1}move(t){this.prepend(g.create(t.x,t.y)),this.body.pop()}}const l=class extends u{static create(t,e){const s=new l;return s.x=t,s.y=e,s}};let a=l;n(a,"UP",l.create(0,-1)),n(a,"DOWN",l.create(0,1)),n(a,"LEFT",l.create(-1,0)),n(a,"RIGHT",l.create(1,0)),n(a,"LEFT_UP",l.create(-1,-1)),n(a,"RIGHT_UP",l.create(1,-1)),n(a,"LEFT_DOWN",l.create(-1,1)),n(a,"RIGHT_DOWN",l.create(1,1));class H{constructor(t){n(this,"obstacleManager",new $);n(this,"snake");n(this,"map");n(this,"direction");n(this,"count");n(this,"config");this.config=t,this.snake=new A,this.map=new R(this.config.map.width,this.config.map.height)}get forbiddenPoints(){return[...this.body,...this.obstacles]}get obstacles(){return this.obstacleManager.obstacles.map(t=>({x:t.x,y:t.y,type:t.type}))}get body(){return this.snake.body.map(t=>u.create(t.x,t.y))}get score(){return this.count}addObstacle(t){this.obstacleManager.add(t)}setDirection(t){this.direction.x+t.x===0&&this.direction.y+t.y===0||(this.direction=t)}init(){this.count=0,this.snake.init(this.config.snake.bodyLength),this.direction=a.RIGHT,this.obstacles.length===0&&this.addObstacle(new _(this)),this.obstacleManager.init()}update(){const t=this.snake.getNextPosition(this.direction);if(this.map.isCollision(t)||this.snake.isCollision(t))return!1;const e=this.obstacleManager.isCollision(t);return e.map(s=>s.consume()).filter(s=>!s).length>0?!1:(e.forEach(s=>s.produce()),this.snake.move(t),!0)}}const S=L({setup(r){const t=new H({map:{width:30,height:25},snake:{bodyLength:3}});t.init(),window.game=t;const{width:e,height:s}=t.map,o=new Array(e*s),i=O({body:[],obstacles:[]});let c=!0;const v=()=>{t.init(),c=!0};return console.log(t),C(()=>{setInterval(()=>{if(!c)return;t.update()||(c=!1),i.body=t.body,i.obstacles=t.obstacles},300),b("w",function(){t.setDirection(a.UP)}),b("s",function(){t.setDirection(a.DOWN)}),b("a",function(){t.setDirection(a.LEFT)}),b("d",function(){t.setDirection(a.RIGHT)})}),(E,W)=>(p(),d("div",null,[x("h1",null,N(y(t).count),1),x("button",{onClick:v},"start"),x("div",{style:k({position:"relative",display:"flex",flexWrap:"wrap",width:`${y(e)*20}px`,height:`${y(s)*20}px`})},[(p(!0),d(m,null,w(y(o),(h,f)=>(p(),d("div",{key:f,style:{width:"20px",border:"1px solid #ccc","box-sizing":"border-box"}}))),128)),(p(!0),d(m,null,w(y(i).body,(h,f)=>(p(),d("div",{key:f,style:k({position:"absolute",width:"20px",height:"20px",left:`${h.x*20}px`,top:`${h.y*20}px`,backgroundColor:f===0?"black":"blue"})},null,4))),128)),(p(!0),d(m,null,w(y(t).obstacles,(h,f)=>(p(),d("div",{key:f,style:k({position:"absolute",width:"20px",height:" 20px",left:`${h.x*20}px`,top:`${h.y*20}px`,backgroundColor:h.type==="food"?"green":"yellow"})},null,4))),128))],4)]))}});F(S).mount("#app");
